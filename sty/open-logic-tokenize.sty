% OpenLogic Project
% Package for tokenizing text

\NeedsTeXFormat{LaTeX2e}
\ProvidesFile{open-logic-tokenize}

\RequirePackage{mfirstuc}
\RequirePackage{xparse}

% Tokens 
% ====== 

% Text that should be uniform and changeable Has four forms: in-text
% singular, in-text plural, initial singular, initial plural. Initial
% forms are usually capitalized. They are optional; if left out, we'll
% take the in-text version and make the first letter uppercase.

\DeclareDocumentCommand \settexttoken { m m m o o } {
    \expandafter\def\csname TEXTTOK@s@#1\endcsname{#2}
    \expandafter\def\csname TEXTTOK@p@#1\endcsname{#3}
    \IfNoValueTF {#4} 
        { \expandafter\def\csname TEXTTOK@S@#1\endcsname{\makefirstuc{#2}} }
        { \expandafter\def\csname TEXTTOK@S@#1\endcsname{#4} }
    \IfNoValueTF {#5} 
        { \expandafter\def\csname TEXTTOK@P@#1\endcsname{\makefirstuc{#3}} }
        { \expandafter\def\csname TEXTTOK@P@#1\endcsname{#5} }
}

\def\@printtexttoken #1#2{\ifcsname TEXTTOK@#1@#2\endcsname
    \printtexttoken{#1}{\csname TEXTTOK@#1@#2\endcsname}\else
    \textbf{Undefined token #2}\fi}

% command can be redefined to eg print tokens in color
\def\printtexttoken#1#2{#2}

% use shorthand mechanism from babel.sty
\useshorthands{!}
\defineshorthand{!!}{\@printtexttoken{s}}
\defineshorthand{!p}{\@printtexttoken{p}}
\defineshorthand{!P}{\@printtexttoken{P}}
\defineshorthand{!S}{\@printtexttoken{S}}
