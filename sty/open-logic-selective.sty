% OpenLogic Project
% Package for selective typesetting

% cribbed from tagging.sty package by Brent Longborough
% http://www.ctan.org/tex-archive/macros/latex/contrib/tagging 

% uses etoolbox's toggles for tags instead, allows for boolean
% expressions in addition to tag lists

\NeedsTeXFormat{LaTeX2e}
\ProvidesFile{open-logic-selective.sty}

\RequirePackage{etoolbox}

\makeatletter

% initialize a list of tags as true

\newcommand{\tagtrue}[1]{%
  \def\do##1{\providetoggle{##1}\toggletrue{##1}}
    \docsvlist{#1}%
  \def\do##1{\providetoggle{not##1}\togglefalse{not##1}}
    \docsvlist{#1}%
}

% initialize a list of tags as false

\newcommand{\tagfalse}[1]{%
  \def\do##1{\providetoggle{##1}\togglefalse{##1}}%
    \docsvlist{#1}%
\def\do##1{\providetoggle{not##1}\toggletrue{not##1}}
    \docsvlist{#1}}

% \printif{boolean expression}{text if true}{text if false}

\newcommand{\printif}[3]{\ifboolexpr{#1}{#2}{#3}}

% \printtag{taglist}{text if tagged}{text if not tagged}

\newcommand{\printtagtext}{}
\newcommand{\printtag}[3]
  {\renewcommand{\printtagtext}{#3}%
   \def\do##1{%
     \iftoggle{##1}{\renewcommand{\printtagtext}{#2}}{}}%
   \docsvlist{#1}%
   \printtagtext%
  }

% change \begin to take optional tags in <...>
% if one of the tags is active, behave as \begin otherwise would
% if one of them is, supress everything until the end of the environment

\let\orig@begin\begin

\def\begin{\@ifnextchar<{\tag@begin}{\orig@begin}}
\def\tag@begin<#1>{\printtag{#1}{\orig@begin}{\supressenv}}

\def\supressenv#1{\begingroup\@bsphack
             \let\do\@makeother\dospecials\catcode`\^^M\active
             \let\verbatim@startline\relax
             \let\verbatim@addtoline\@gobble
             \let\verbatim@processline\relax
             \let\verbatim@finish\relax
             \def\@currenvir{#1}
             \verbatim@}

\makeatother

